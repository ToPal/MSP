	Данный модуль предоставляет возможность удобно работать с СУБД MySQL при программировании на php.

	Для подключения модуля нужно где-нибудь в начале php-файла подключить его: include_once('lib_DB_init.php');
	При этом следует не забыть определить имя базы данных DB, её адрес db_ipaddr, имя пользователя для доступа к базе db_username и пароль для этого доступа db_userpass.
	
	Модуль сразу подключается к БД и предоставляет возможность использования следующих функций:
	
	----Функции для общения с БД----
	
	gefdb($q)  - Get Element From Database. Выполняет запрос $q и возвращает первый элемент первой строки результата запроса и "" в случае неудачи
	
	grfdb($q)  - Get Row From Data Base. Выполняет запрос $q и возвращает первую строку результата запроса $q и "" в случае неудачи
	
	gafdb($q)  - Get Array From Data Base. Выполняет запрос $q и возвращает результат запроса $q в виде массива и "" в случае неудачи
	
	geafdb($q) - Get Element Array From Data Base. Выполняет запрос $q и возвращает массив, содержащий только только по первому элементу из запрашиваемых строк
	
	-----Функции для получения служебной информации из БД-----
	
	get_tables() - Возвращает список таблиц в БД
	
	get_table_vars($table_name) - Возвращает список полей таблицы $table_name с указанием, обязательны они или нет: обязательные лежат в массиве 'req', необязательные в 'opt'
	
	----Сопровождающие функции----
	
	get_insert_string($arr) - Из ассоциативного массива $arr составляет строку типа "($k1, $k2, ..) VALUES ('$v1', '$v2', ..)", которую удобно использовать для SQL-запроса INSERT
	
	get_update_string($arr) - Из ассоциативного массива $arr составляет строку  типа "$k1='$v1', $k2='$v2', ..", которую удобно использовать для SQL-запроса UPDATE
 
	isParamsDefs($fact, $req_vars, $opt_vars = array()) - Проверяет наличие обязательных и опциональных параметров в ассоциативном массиве $fact. Возвращает TRUE, если в $fact определены все ненулевые переменные с именами, перечисленными в $req_vars, и некоторые из $opt_vars; иначе - FALSE
	
	__ПРИМЕЧАНИЯ__
	
	Все запросы перед выполнением проходят через функцию my_sql_query($q). Сейчас она пуста, но ее можно будет использовать для настройки безопасности или логгирования всех запросов к базе